#!/usr/bin/env python
# main
import os
import sys
import subprocess

def cmd(command):
    _cmd(command, False)

def _cmd(command, ignore):
    process = subprocess.Popen(command,stdout=subprocess.PIPE, shell=True, executable='/bin/bash')
    output = process.communicate()[0]
    if process.returncode != 0 and not ignore:
        print >>sys.stderr, output
        sys.exit(1)
    if len(output) > 0:
        print(output)

def main():
    try:
        service_account_file = os.path.expanduser(os.getenv("RD_CONFIG_GCP_SERVICE_ACCOUNT")).replace('\r\n', os.linesep)
        f = open("/tmp/.sa.json", "w")
        f.write(service_account_file+'\n')
        f.close()
        cmd("gcloud auth activate-service-account $RD_CONFIG_GCP_SERVICE_ACCOUNT_NAME@$RD_CONFIG_GCP_PROJECT_NAME.iam.gserviceaccount.com --key-file=/tmp/.sa.json --project=$RD_CONFIG_GCP_PROJECT_NAME ")
        cmd("gcloud container clusters get-credentials $RD_CONFIG_GCP_GKE_CLUSTER_NAME  --region $RD_CONFIG_GCP_PROJECT_REGION --project $RD_CONFIG_GCP_PROJECT_NAME ")
        cmd(os.getenv("RD_CONFIG_GKE_COMMAND"))
        cmd("echo 'The processing was finished'")
    except OSError as e:
        print >>sys.stderr, "Command error:", e
        sys.exit(1)
    finally:
        os.remove("/tmp/.sa.json")
        cmd("kubectl config unset users >/dev/null 2>&1")
        cmd("kubectl config unset contexts >/dev/null 2>&1")
        cmd("kubectl config unset clusters >/dev/null 2>&1")
        cmd("kubectl config unset current-context >/dev/null 2>&1")
        _cmd("gcloud auth revoke --all  >/dev/null 2>&1", True)

if __name__ == '__main__':
    main()
